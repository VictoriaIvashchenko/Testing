package tools;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.PrintStream;

import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * Class {@code ConsolePrintCheck} is utility class for checking the console output and error stream.
 *
 * <p>This class provides a method to capture and validate console output or error output from a task.
 * It allows for testing tasks that print to the console by redirecting the input and output streams.</p>
 *
 * <p>The class restores the original system input, output, and error streams after the task is executed.</p>
 */
public class ConsolePrintCheck {

    /**
     * Validates the console output or error stream for a given task.
     *
     * <p>This method redirects the system input and output (or error stream) to capture the output
     * generated by a task. It compares the actual output against the expected output and performs an assertion.</p>
     *
     * <p>The method allows for checking either the standard output or the error output by setting the
     * {@code checkErrorStream} parameter. If {@code checkErrorStream} is {@code true}, the method checks
     * the error stream; otherwise, it checks the standard output.</p>
     *
     * <p>After the task is executed, the method restores the original system input, output, and error streams.</p>
     *
     * @param input            the input to simulate in the console
     * @param expectedOutput   the expected output or error output to compare with the task's actual output
     * @param task             the task to be executed (e.g., a method or block of code)
     * @param checkErrorStream if {@code true}, checks the error stream, otherwise checks the standard output
     */
    public static void assertValidConsolePrint(String input, String expectedOutput, Runnable task, boolean checkErrorStream) {
        InputStream originalIn = System.in;
        PrintStream originalOut = System.out;
        PrintStream originalErr = System.err;

        try {
            ByteArrayInputStream testIn = new ByteArrayInputStream(input.getBytes());
            System.setIn(testIn);

            ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
            PrintStream newPrintStream = new PrintStream(outputStream);

            if (checkErrorStream) {
                System.setErr(newPrintStream);
            } else {
                System.setOut(newPrintStream);
            }

            task.run();

            String actualOutput = outputStream.toString();

            assertEquals(expectedOutput, actualOutput);
        } finally {
            System.setIn(originalIn);
            System.setOut(originalOut);
            System.setErr(originalErr);
        }
    }
}
